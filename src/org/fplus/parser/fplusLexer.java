// Generated from fplus.g4 by ANTLR 4.1
package org.fplus.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class fplusLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		Equal=1, NotEqual=2, Assign=3, Comma=4, Semicolon=5, Colon=6, LeftBrace=7, 
		RightBrace=8, Dollar=9, LeftParen=10, RightParen=11, LeftBracket=12, RightBracket=13, 
		Smaller=14, Larger=15, Exclamation=16, Plus=17, Minus=18, Star=19, Slash=20, 
		Prefix=21, Template=22, Interface=23, End=24, Do=25, Program=26, Module=27, 
		Contains=28, Function=29, Subroutine=30, Procedure=31, Recursive=32, Type=33, 
		Extends=34, Private=35, Public=36, Sequence=37, Abstract=38, Bind=39, 
		Generic=40, If=41, Then=42, Else=43, And=44, Not=45, Or=46, Identifier=47, 
		IntegerConstant=48, FloatConstant=49, StringLiteral=50, AssignPointer=51, 
		Newline=52, WS=53, Noise=54;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'=='", "'/='", "'='", "','", "';'", "':'", "'{'", "'}'", "'$'", "'('", 
		"')'", "'['", "']'", "'<'", "'>'", "'!'", "'+'", "'-'", "'*'", "'/'", 
		"Prefix", "Template", "Interface", "End", "Do", "Program", "Module", "Contains", 
		"Function", "Subroutine", "Procedure", "Recursive", "Type", "Extends", 
		"Private", "Public", "Sequence", "Abstract", "Bind", "Generic", "If", 
		"Then", "Else", "And", "Not", "Or", "Identifier", "IntegerConstant", "FloatConstant", 
		"StringLiteral", "AssignPointer", "Newline", "WS", "Noise"
	};
	public static final String[] ruleNames = {
		"Equal", "NotEqual", "Assign", "Comma", "Semicolon", "Colon", "LeftBrace", 
		"RightBrace", "Dollar", "LeftParen", "RightParen", "LeftBracket", "RightBracket", 
		"Smaller", "Larger", "Exclamation", "Plus", "Minus", "Star", "Slash", 
		"Prefix", "Template", "Interface", "End", "Do", "Program", "Module", "Contains", 
		"Function", "Subroutine", "Procedure", "Recursive", "Type", "Extends", 
		"Private", "Public", "Sequence", "Abstract", "Bind", "Generic", "If", 
		"Then", "Else", "And", "Not", "Or", "Identifier", "IntegerConstant", "Nondigit", 
		"NonzeroDigit", "Digit", "FloatConstant", "StringLiteral", "AssignPointer", 
		"Newline", "WS", "Noise"
	};


	public fplusLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "fplus.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\28\u018d\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\3\2\3\2\3\2\3\3\3"+
		"\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3"+
		"\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22"+
		"\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\33"+
		"\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36"+
		"\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 "+
		"\3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3"+
		"\"\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3"+
		"%\3&\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3"+
		"(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3,\3"+
		",\3,\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3\60\3\60\3\60"+
		"\7\60\u015c\n\60\f\60\16\60\u015f\13\60\3\61\6\61\u0162\n\61\r\61\16\61"+
		"\u0163\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\65\5\65\u016f\n\65\3"+
		"\66\3\66\7\66\u0173\n\66\f\66\16\66\u0176\13\66\3\66\3\66\3\67\3\67\3"+
		"\67\38\38\58\u017f\n8\38\58\u0182\n8\39\69\u0185\n9\r9\169\u0186\3:\6"+
		":\u018a\n:\r:\16:\u018b\4\u0174\u018b;\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1"+
		"\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37"+
		"\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1"+
		"\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1"+
		"Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62\1c\2\1e\2\1g\2\1i\63\1k\64\1"+
		"m\65\1o\66\1q\67\1s8\1\3\2\35\4\2HHhh\4\2RRrr\4\2VVvv\4\2GGgg\4\2OOoo"+
		"\4\2NNnn\4\2CCcc\4\2KKkk\4\2PPpp\4\2TTtt\4\2EEee\4\2FFff\4\2QQqq\4\2I"+
		"Iii\4\2WWww\4\2UUuu\4\2DDdd\4\2XXxx\4\2[[{{\4\2ZZzz\4\2SSss\4\2JJjj\5"+
		"\2C\\aac|\3\2\63;\3\2\62;\4\2\13\13\"\"\4\2\f\f\17\17\u0192\2\3\3\2\2"+
		"\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3"+
		"\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2"+
		"\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2"+
		"\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2"+
		"\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3"+
		"\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2"+
		"\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2"+
		"W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2i\3"+
		"\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\3u\3\2\2"+
		"\2\5x\3\2\2\2\7{\3\2\2\2\t}\3\2\2\2\13\177\3\2\2\2\r\u0081\3\2\2\2\17"+
		"\u0083\3\2\2\2\21\u0085\3\2\2\2\23\u0087\3\2\2\2\25\u0089\3\2\2\2\27\u008b"+
		"\3\2\2\2\31\u008d\3\2\2\2\33\u008f\3\2\2\2\35\u0091\3\2\2\2\37\u0093\3"+
		"\2\2\2!\u0095\3\2\2\2#\u0097\3\2\2\2%\u0099\3\2\2\2\'\u009b\3\2\2\2)\u009d"+
		"\3\2\2\2+\u009f\3\2\2\2-\u00a5\3\2\2\2/\u00ae\3\2\2\2\61\u00b8\3\2\2\2"+
		"\63\u00bc\3\2\2\2\65\u00bf\3\2\2\2\67\u00c7\3\2\2\29\u00ce\3\2\2\2;\u00d7"+
		"\3\2\2\2=\u00e0\3\2\2\2?\u00eb\3\2\2\2A\u00f5\3\2\2\2C\u00ff\3\2\2\2E"+
		"\u0104\3\2\2\2G\u010c\3\2\2\2I\u0114\3\2\2\2K\u011b\3\2\2\2M\u0124\3\2"+
		"\2\2O\u012d\3\2\2\2Q\u0132\3\2\2\2S\u013a\3\2\2\2U\u013d\3\2\2\2W\u0142"+
		"\3\2\2\2Y\u0147\3\2\2\2[\u014d\3\2\2\2]\u0153\3\2\2\2_\u0158\3\2\2\2a"+
		"\u0161\3\2\2\2c\u0165\3\2\2\2e\u0167\3\2\2\2g\u0169\3\2\2\2i\u016b\3\2"+
		"\2\2k\u0170\3\2\2\2m\u0179\3\2\2\2o\u0181\3\2\2\2q\u0184\3\2\2\2s\u0189"+
		"\3\2\2\2uv\7?\2\2vw\7?\2\2w\4\3\2\2\2xy\7\61\2\2yz\7?\2\2z\6\3\2\2\2{"+
		"|\7?\2\2|\b\3\2\2\2}~\7.\2\2~\n\3\2\2\2\177\u0080\7=\2\2\u0080\f\3\2\2"+
		"\2\u0081\u0082\7<\2\2\u0082\16\3\2\2\2\u0083\u0084\7}\2\2\u0084\20\3\2"+
		"\2\2\u0085\u0086\7\177\2\2\u0086\22\3\2\2\2\u0087\u0088\7&\2\2\u0088\24"+
		"\3\2\2\2\u0089\u008a\7*\2\2\u008a\26\3\2\2\2\u008b\u008c\7+\2\2\u008c"+
		"\30\3\2\2\2\u008d\u008e\7]\2\2\u008e\32\3\2\2\2\u008f\u0090\7_\2\2\u0090"+
		"\34\3\2\2\2\u0091\u0092\7>\2\2\u0092\36\3\2\2\2\u0093\u0094\7@\2\2\u0094"+
		" \3\2\2\2\u0095\u0096\7#\2\2\u0096\"\3\2\2\2\u0097\u0098\7-\2\2\u0098"+
		"$\3\2\2\2\u0099\u009a\7/\2\2\u009a&\3\2\2\2\u009b\u009c\7,\2\2\u009c("+
		"\3\2\2\2\u009d\u009e\7\61\2\2\u009e*\3\2\2\2\u009f\u00a0\7#\2\2\u00a0"+
		"\u00a1\7&\2\2\u00a1\u00a2\3\2\2\2\u00a2\u00a3\t\2\2\2\u00a3\u00a4\t\3"+
		"\2\2\u00a4,\3\2\2\2\u00a5\u00a6\t\4\2\2\u00a6\u00a7\t\5\2\2\u00a7\u00a8"+
		"\t\6\2\2\u00a8\u00a9\t\3\2\2\u00a9\u00aa\t\7\2\2\u00aa\u00ab\t\b\2\2\u00ab"+
		"\u00ac\t\4\2\2\u00ac\u00ad\t\5\2\2\u00ad.\3\2\2\2\u00ae\u00af\t\t\2\2"+
		"\u00af\u00b0\t\n\2\2\u00b0\u00b1\t\4\2\2\u00b1\u00b2\t\5\2\2\u00b2\u00b3"+
		"\t\13\2\2\u00b3\u00b4\t\2\2\2\u00b4\u00b5\t\b\2\2\u00b5\u00b6\t\f\2\2"+
		"\u00b6\u00b7\t\5\2\2\u00b7\60\3\2\2\2\u00b8\u00b9\t\5\2\2\u00b9\u00ba"+
		"\t\n\2\2\u00ba\u00bb\t\r\2\2\u00bb\62\3\2\2\2\u00bc\u00bd\t\r\2\2\u00bd"+
		"\u00be\t\16\2\2\u00be\64\3\2\2\2\u00bf\u00c0\t\3\2\2\u00c0\u00c1\t\13"+
		"\2\2\u00c1\u00c2\t\16\2\2\u00c2\u00c3\t\17\2\2\u00c3\u00c4\t\13\2\2\u00c4"+
		"\u00c5\t\b\2\2\u00c5\u00c6\t\6\2\2\u00c6\66\3\2\2\2\u00c7\u00c8\t\6\2"+
		"\2\u00c8\u00c9\t\16\2\2\u00c9\u00ca\t\r\2\2\u00ca\u00cb\t\20\2\2\u00cb"+
		"\u00cc\t\7\2\2\u00cc\u00cd\t\5\2\2\u00cd8\3\2\2\2\u00ce\u00cf\t\f\2\2"+
		"\u00cf\u00d0\t\16\2\2\u00d0\u00d1\t\n\2\2\u00d1\u00d2\t\4\2\2\u00d2\u00d3"+
		"\t\b\2\2\u00d3\u00d4\t\t\2\2\u00d4\u00d5\t\n\2\2\u00d5\u00d6\t\21\2\2"+
		"\u00d6:\3\2\2\2\u00d7\u00d8\t\2\2\2\u00d8\u00d9\t\20\2\2\u00d9\u00da\t"+
		"\n\2\2\u00da\u00db\t\f\2\2\u00db\u00dc\t\4\2\2\u00dc\u00dd\t\t\2\2\u00dd"+
		"\u00de\t\16\2\2\u00de\u00df\t\n\2\2\u00df<\3\2\2\2\u00e0\u00e1\t\21\2"+
		"\2\u00e1\u00e2\t\20\2\2\u00e2\u00e3\t\22\2\2\u00e3\u00e4\t\13\2\2\u00e4"+
		"\u00e5\t\16\2\2\u00e5\u00e6\t\20\2\2\u00e6\u00e7\t\4\2\2\u00e7\u00e8\t"+
		"\t\2\2\u00e8\u00e9\t\n\2\2\u00e9\u00ea\t\5\2\2\u00ea>\3\2\2\2\u00eb\u00ec"+
		"\t\3\2\2\u00ec\u00ed\t\13\2\2\u00ed\u00ee\t\16\2\2\u00ee\u00ef\t\f\2\2"+
		"\u00ef\u00f0\t\5\2\2\u00f0\u00f1\t\r\2\2\u00f1\u00f2\t\20\2\2\u00f2\u00f3"+
		"\t\13\2\2\u00f3\u00f4\t\5\2\2\u00f4@\3\2\2\2\u00f5\u00f6\t\13\2\2\u00f6"+
		"\u00f7\t\5\2\2\u00f7\u00f8\t\f\2\2\u00f8\u00f9\t\20\2\2\u00f9\u00fa\t"+
		"\13\2\2\u00fa\u00fb\t\21\2\2\u00fb\u00fc\t\t\2\2\u00fc\u00fd\t\23\2\2"+
		"\u00fd\u00fe\t\5\2\2\u00feB\3\2\2\2\u00ff\u0100\t\4\2\2\u0100\u0101\t"+
		"\24\2\2\u0101\u0102\t\3\2\2\u0102\u0103\t\5\2\2\u0103D\3\2\2\2\u0104\u0105"+
		"\t\5\2\2\u0105\u0106\t\25\2\2\u0106\u0107\t\4\2\2\u0107\u0108\t\5\2\2"+
		"\u0108\u0109\t\n\2\2\u0109\u010a\t\r\2\2\u010a\u010b\t\21\2\2\u010bF\3"+
		"\2\2\2\u010c\u010d\t\3\2\2\u010d\u010e\t\13\2\2\u010e\u010f\t\t\2\2\u010f"+
		"\u0110\t\23\2\2\u0110\u0111\t\b\2\2\u0111\u0112\t\4\2\2\u0112\u0113\t"+
		"\5\2\2\u0113H\3\2\2\2\u0114\u0115\t\3\2\2\u0115\u0116\t\20\2\2\u0116\u0117"+
		"\t\22\2\2\u0117\u0118\t\7\2\2\u0118\u0119\t\t\2\2\u0119\u011a\t\f\2\2"+
		"\u011aJ\3\2\2\2\u011b\u011c\t\21\2\2\u011c\u011d\t\5\2\2\u011d\u011e\t"+
		"\26\2\2\u011e\u011f\t\20\2\2\u011f\u0120\t\5\2\2\u0120\u0121\t\n\2\2\u0121"+
		"\u0122\t\f\2\2\u0122\u0123\t\5\2\2\u0123L\3\2\2\2\u0124\u0125\t\b\2\2"+
		"\u0125\u0126\t\22\2\2\u0126\u0127\t\21\2\2\u0127\u0128\t\4\2\2\u0128\u0129"+
		"\t\13\2\2\u0129\u012a\t\b\2\2\u012a\u012b\t\f\2\2\u012b\u012c\t\4\2\2"+
		"\u012cN\3\2\2\2\u012d\u012e\t\22\2\2\u012e\u012f\t\t\2\2\u012f\u0130\t"+
		"\n\2\2\u0130\u0131\t\r\2\2\u0131P\3\2\2\2\u0132\u0133\t\17\2\2\u0133\u0134"+
		"\t\5\2\2\u0134\u0135\t\n\2\2\u0135\u0136\t\5\2\2\u0136\u0137\t\13\2\2"+
		"\u0137\u0138\t\t\2\2\u0138\u0139\t\f\2\2\u0139R\3\2\2\2\u013a\u013b\t"+
		"\t\2\2\u013b\u013c\t\2\2\2\u013cT\3\2\2\2\u013d\u013e\t\4\2\2\u013e\u013f"+
		"\t\27\2\2\u013f\u0140\t\5\2\2\u0140\u0141\t\n\2\2\u0141V\3\2\2\2\u0142"+
		"\u0143\t\5\2\2\u0143\u0144\t\7\2\2\u0144\u0145\t\21\2\2\u0145\u0146\t"+
		"\5\2\2\u0146X\3\2\2\2\u0147\u0148\7\60\2\2\u0148\u0149\t\b\2\2\u0149\u014a"+
		"\t\n\2\2\u014a\u014b\t\r\2\2\u014b\u014c\7\60\2\2\u014cZ\3\2\2\2\u014d"+
		"\u014e\7\60\2\2\u014e\u014f\t\n\2\2\u014f\u0150\t\16\2\2\u0150\u0151\t"+
		"\4\2\2\u0151\u0152\7\60\2\2\u0152\\\3\2\2\2\u0153\u0154\7\60\2\2\u0154"+
		"\u0155\t\16\2\2\u0155\u0156\t\13\2\2\u0156\u0157\7\60\2\2\u0157^\3\2\2"+
		"\2\u0158\u015d\5c\62\2\u0159\u015c\5c\62\2\u015a\u015c\5g\64\2\u015b\u0159"+
		"\3\2\2\2\u015b\u015a\3\2\2\2\u015c\u015f\3\2\2\2\u015d\u015b\3\2\2\2\u015d"+
		"\u015e\3\2\2\2\u015e`\3\2\2\2\u015f\u015d\3\2\2\2\u0160\u0162\5g\64\2"+
		"\u0161\u0160\3\2\2\2\u0162\u0163\3\2\2\2\u0163\u0161\3\2\2\2\u0163\u0164"+
		"\3\2\2\2\u0164b\3\2\2\2\u0165\u0166\t\30\2\2\u0166d\3\2\2\2\u0167\u0168"+
		"\t\31\2\2\u0168f\3\2\2\2\u0169\u016a\t\32\2\2\u016ah\3\2\2\2\u016b\u016c"+
		"\5a\61\2\u016c\u016e\7\60\2\2\u016d\u016f\5a\61\2\u016e\u016d\3\2\2\2"+
		"\u016e\u016f\3\2\2\2\u016fj\3\2\2\2\u0170\u0174\7$\2\2\u0171\u0173\13"+
		"\2\2\2\u0172\u0171\3\2\2\2\u0173\u0176\3\2\2\2\u0174\u0175\3\2\2\2\u0174"+
		"\u0172\3\2\2\2\u0175\u0177\3\2\2\2\u0176\u0174\3\2\2\2\u0177\u0178\7$"+
		"\2\2\u0178l\3\2\2\2\u0179\u017a\7?\2\2\u017a\u017b\7@\2\2\u017bn\3\2\2"+
		"\2\u017c\u017e\7\17\2\2\u017d\u017f\7\f\2\2\u017e\u017d\3\2\2\2\u017e"+
		"\u017f\3\2\2\2\u017f\u0182\3\2\2\2\u0180\u0182\7\f\2\2\u0181\u017c\3\2"+
		"\2\2\u0181\u0180\3\2\2\2\u0182p\3\2\2\2\u0183\u0185\t\33\2\2\u0184\u0183"+
		"\3\2\2\2\u0185\u0186\3\2\2\2\u0186\u0184\3\2\2\2\u0186\u0187\3\2\2\2\u0187"+
		"r\3\2\2\2\u0188\u018a\n\34\2\2\u0189\u0188\3\2\2\2\u018a\u018b\3\2\2\2"+
		"\u018b\u018c\3\2\2\2\u018b\u0189\3\2\2\2\u018ct\3\2\2\2\f\2\u015b\u015d"+
		"\u0163\u016e\u0174\u017e\u0181\u0186\u018b";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}